--1 How many unique nodes are there on the Data Bank system?

SELECT COUNT(DISTINCT node_id) from data_bank.customer_nodes;

-- 2What is the number of nodes per region?

SELECT region_id , COUNT( node_id) AS num_nodes_per_region
from data_bank.customer_nodes
GROUP BY region_id ORDER BY region_id;

--3 How many customers are allocated to each region?

SELECT region_id, COUNT(DISTINCT customer_id) AS customers_allocated
from data_bank.customer_nodes
GROUP BY region_id ORDER BY region_id;


--4 How many days on average are customers reallocated to a different node?
select avg(end_date- start_date)
from data_bank.customer_nodes;
--aşağıdaki aşırı alkasz detaylı bişey oldu.
SELECT customer_id, region_id,node_id,AVG (end_date - start_date) OVER( PARTITION BY customer_id order by node_id )
from data_bank.customer_nodes
;

SELECT customer_id,node_id, AVG(end_date- start_date)
from data_bank.customer_nodes
group by customer_id,node_id
ORDER BY customer_id;


--5 What is the median, 80th and 95th percentile for this same reallocation days metric for each region?


            --- 16.02.2022--
-B. Customer Transactions

--1 What is the unique count and total amount for each transaction type?ion type?

SELECT 
	txn_type,
	COUNT(txn_type) AS unique_count,
	SUM(txn_amount) AS total_amount
FROM data_bank.customer_transactions
GROUP BY txn_type;

--2. What is the average total historical deposit counts and amounts for all customers?
WITH cte_deposit AS (
	SELECT 
		customer_id,
		COUNT(txn_type) AS deposit_count,
		SUM(txn_amount) AS deposit_amount
	FROM data_bank.customer_transactions
	WHERE txn_type = 'deposit'
	GROUP BY customer_id
)
SELECT 
	AVG(deposit_count) AS avg_deposit_count,
	AVG(deposit_amount) AS avg_deposit_amount
FROM cte_deposit;

--3 --For each month - how many Data Bank customers make more than 1 deposit and either 1 purchase or 1 withdrawal in a single month?


CREATE TABLE monthly_txn AS (
  select  EXTRACT (MONTH FROM txn_date ) AS txn_month ,customer_id, 
  SUM(CASE WHEN txn_type = 'deposit' THEN 1 ELSE 0 END )AS deposit_count,
  SUM(CASE WHEN txn_type = 'withdrawal' THEN 1 ELSE 0 END )AS withdrawal_count,
  SUM(CASE WHEN txn_type = 'purchase' THEN 1 ELSE 0 END )AS purchase_count
  from data_bank.customer_transactions
GROUP BY txn_month, customer_id
ORDER BY txn_month) ;

select txn_month, COUNT(customer_id) AS customer_count from monthly_txn
where deposit_count= 1 AND (purchase_count >= 1 OR withdrawal_count >=1)
GROUP BY txn_month
ORDER BY txn_month;



4 -- What is the closing balance for each customer at the end of the month?
   -- closing balance = txn amount of begining of the month + current txn amount 
   -- cumulative toplam içeren bi column oluşturmam gerek.
   
CREATE TEMP TABLE T1 AS (select customer_id, EXTRACT (MONTH FROM txn_date ) AS txn_month ,SUM(txn_amount) AS monthly_amount
from data_bank.customer_transactions
group by customer_id, txn_month
order by customer_id);
   
CREATE TEMP TABLE T2 AS (select customer_id, EXTRACT (MONTH FROM txn_date ) AS txn_month ,SUM(txn_amount) AS monthly_amount
from data_bank.customer_transactions
group by customer_id, txn_month
order by customer_id);
 

SELECT customer_id,txn_month, monthly_amount, 
   (
    SELECT SUM(monthly_amount) 
    FROM T2  
    WHERE T2.customer_id = T1.customer_id AND  T2.txn_month <= T1.txn_month
   ) AS cumulative
FROM T1
order by customer_id,txn_month;



-- C. Data Allocation Challenge
-- customer group 1: data is allocated based off the amount of money at the end of the previous month 


ALTER TABLE data_bank.customer_transactions 
ADD COLUMN net_amount int ;
select* from data_bank.customer_transactions ;

-- https://dba.stackexchange.com/questions/212927/postgresql-update-different-column-on-condition-using-case-statement/212928
